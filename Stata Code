clear all
capture program drop sim_logit_driving
program define sim_logit_driving, rclass
version 16.1
syntax [, obs(integer 100000) ]
drop _all
set obs `obs'
* Parameters for K
gen age = rbinomial(1, .3) // >65yo
gen sex = rbinomial(1, .52) // female
gen area = rbinomial(1, .6) // urban
* Baseline b0 characteristics
scalar a0 = logit(.3) // low driving milage: 30%
scalar c0 = logit(0.17) // Polypharmacy:17%
scalar b0 = logit(.002) // RTC 0.2%
* Parameters for the ZK relationship
scalar a1 = log(0.8) // Age
scalar a2 = log(1.8) // Sex
scalar a3 = log(1.2) // Area
* Parameters for the XKZ relationship
scalar c1 = log(2) // Age
scalar c2 = log(0.9) // Sex
scalar c3 = log(1.2) // Area
scalar c4 = log(1.5) // XZ
* Parameters for the YXZK relationship
scalar b1 = rnormal(ln(1.35), (ln(1.56)-ln(1.17))/(2*1.96)) // X
scalar b2 = log(3) // Z
scalar b3 = log(0.6) // Age
scalar b4 = log(0.3) // Sex
scalar b5 = log(0.9) // Area
gen z = rbinomial(1, invlogit(a0 + a1*age + a2*sex + a3*area))
gen x = rbinomial(1, invlogit(c0 + c1*age + c2*sex + c3*area + c4*z))
gen y = rbinomial(1, invlogit(b0 + b1*x + b2*z + b3*age + b4*sex +
b5*area))
* DGM under an effect of X not adjusted for Z
di _n "Ignoring confounding by Z"
logit y x age sex area, or
return scalar b1_1_x = _b[x]
return scalar se_b1_1_x = _se[x]
* DGM under an effect of X adjusted for Z
di _n "Adjusting for confounding by Z"
logit y x z age sex area, or
test _b[x] = 0
return scalar p = r(p)
return scalar b1_1_z = _b[x]
return scalar se_b1_1_z = _se[x]
end
* Simulate one large prospective study of size n = 100000
sim_logit_driving
* Simulate a 1000 studies, each n=100000
simulate p = r(p) b1_1_x = r(b1_1_x) se_b1_1_x = r(se_b1_1_x) ///
b1_1_z = r(b1_1_z) se_b1_1_z = r(se_b1_1_z), reps(1000):
sim_logit_driving
count if p < 0.05
display "Simulated Power = " r(N)/c(N)*100
* OR1 (effect of X not adjusting for Z) (95%CI)
gen orx = exp(b1_1_x)
su b1_1_x
di exp(r(mean)-1.96*r(sd))
di exp(r(mean)+1.96*r(sd))
* OR0 (effect of X adjusting for Z) (95%CI)
gen orz = exp(b1_1_z)
su b1_1_z
di exp(r(mean)-1.96*r(sd))
di exp(r(mean)+1.96*r(sd))
* Summary Statistics
su orz orx, detail
* Graphical presentation
twoway ///
(histogram orx, bin(60) fc(black%10) lc(black%30)) ///
(histogram orz, bin(60) fc(black%25) lc(black%25)) ///
, xlabel(#10) ylabel(#10, angle(horiz) format(%3.2f)) ///
xline(1.37 1.53, lc(black%80) lp(-)) ///
xtitle("Odds Ratio (ln)") xscale(log) ytitle("Simulated
Distribution") ///
scheme(s1mono) plotregion(style(none)) ///
ylabel(#10) plotregion(style(none)) ///
legend(order(1 2) label(1 "Crude OR{sub:{it:YX}}=1.53") label(2
"Adjusted OR{sub:{it:YX|Z}}=1.37") ring(0) col(1) pos(1)
size(small) region(style(none))) name(fig1, replace)
* Kernel Density: Comparison Effect of X vs no Effect of X after Adjustment
of Z
twoway (kdensity orx, color(black%10) cmissing(y) recast(area)) ///
(kdensity orz, color(black%25) cmissing(y) recast(area)), ///
xline(1.37 1.53, lc(black%50) lp(-)) ///
ytitle("Simulated Distribution") ///
xtitle("Odds Ratio (ln)") xscale(log) ///
ylabel(#10, angle(horiz) format(%3.2f)) ///
xlabel(#10) scheme(s1mono) plotregion(style(none)) ///
legend(order(1 2) label(1 "Crude OR{sub:{it:YX}}=1.53") ///
label(2 "Adjusted OR{sub:{it:YX|Z}}=1.37") ring(0) col(1)
pos(1) size(small) region(style(none))) name(fig2, replace)
* Combined Graph
graph combine fig1 fig2 ///
, ycommon cols(1) scheme(s1mono) name(fig_combine, replace)
